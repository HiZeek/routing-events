{"ast":null,"code":"var _jsxFileName = \"/Users/zeek/Documents/Projects/Personal Works/routing-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { defer, json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport EventsNavigation from \"../components/EventsNavigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const data = useLoaderData();\n  //   if (data.isError) {\n  //     return <p>{data.message}</p>;\n  //   }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventsNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Events, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Events;\nexport default Events;\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const loader = () => {\n  defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["defer","json","useLoaderData","EventsList","EventsNavigation","Events","data","events","loadEvents","response","fetch","ok","message","status","loader"],"sources":["/Users/zeek/Documents/Projects/Personal Works/routing-project/frontend/src/pages/Events.js"],"sourcesContent":["import { defer, json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport EventsNavigation from \"../components/EventsNavigation\";\n\nfunction Events() {\n  const data = useLoaderData();\n  //   if (data.isError) {\n  //     return <p>{data.message}</p>;\n  //   }\n  const events = data.events;\n  return (\n    <>\n      <EventsNavigation />\n\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default Events;\n\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events.\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    return json({ message: \"Could not fetch events.\" }, { status: 500 });\n  } else {\n    return response;\n  }\n};\n\nexport const loader = () => {\n  defer({\n    events: loadEvents(),\n  });\n};\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC;AAAA;AAE9D,SAASC,MAAM,GAAG;EAAA;EAChB,MAAMC,IAAI,GAAGJ,aAAa,EAAE;EAC5B;EACA;EACA;EACA,MAAMK,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBACE;IAAA,wBACE,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eAEpB,QAAC,UAAU;MAAC,MAAM,EAAEA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAC7B;AAEP;AAAC,GAbQF,MAAM;EAAA,QACAH,aAAa;AAAA;AAAA,KADnBG,MAAM;AAef,eAAeA,MAAM;AAErB,MAAMG,UAAU,GAAG,YAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,OAAOV,IAAI,CAAC;MAAEW,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACtE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAED,OAAO,MAAMK,MAAM,GAAG,MAAM;EAC1Bd,KAAK,CAAC;IACJO,MAAM,EAAEC,UAAU;EACpB,CAAC,CAAC;AACJ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}